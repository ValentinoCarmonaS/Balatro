@startumlinterface Taroteable {    + applyTarot(tarot : Tarot) : void}class RoyalFlush {    + isValid(cards : List<Card>) : boolean}class StraightFlush {    + isValid(cards : List<Card>) : boolean}class Poker {    + isValid(cards : List<Card>) : boolean}class FullHouse {    + isValid(cards : List<Card>) : boolean}class Flush {    + isValid(cards : List<Card>) : boolean}class Straight {    + isValid(cards : List<Card>) : boolean}class ThreeOfAKind {    + isValid(cards : List<Card>) : boolean}class DoublePair {    + isValid(cards : List<Card>) : boolean}class OnePair {    + isValid(cards : List<Card>) : boolean}class HighCard {    + isValid(cards : List<Card>) : boolean}interface Hand implements Taroteable {    + isValid(cards : List<Card>) : boolean    + getTotalPoints() : int    + incRelevantValues() : Score    + getRelevatCards() : List<Card>    + equalHand(hand : Hand) : boolean    + handToString() : String}class UtilsCheckHand {    + thereIsPair(cards : List<Card>) : Set<Card>    + thereAreTrio(cards : List<Card>) : Set<Card>    + thereAreStraight(cards : List<Card>) : boolean    + allSameColor(cards : List<Card>) : boolean    + tenToAs(cards : List<Card>) : boolean    + sort(cards : List<Card>) : List<Card>}abstract class GenericHand implements Hand {    # score : Score    # cards : List<Card>    + GenericHand()    + getRelevatCards() : List<Card>    + getTotalPoints() : int    + incRelevantValues() : Score    + applyTarot(tarot : Tarot) : void    + equalHand(hand : Hand) : boolean    + handToString() : String}GenericHand <|.. RoyalFlushGenericHand <|... StraightFlushGenericHand <|.... PokerGenericHand <|..... FullHouseGenericHand <|...... FlushGenericHand <|...... StraightGenericHand <|..... ThreeOfAKindGenericHand <|.... DoublePairGenericHand <|... OnePairGenericHand <|.. HighCardOnePair ..> UtilsCheckHandDoublePair ..> UtilsCheckHandThreeOfAKind ..> UtilsCheckHandStraight ..> UtilsCheckHandStraightFlush ..> UtilsCheckHandFullHouse ..> UtilsCheckHandPoker ..> UtilsCheckHandRoyalFlush ..> UtilsCheckHand@enduml