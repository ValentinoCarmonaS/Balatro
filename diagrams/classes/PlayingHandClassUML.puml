@startumlinterface Taroteable {  + applyTarot(Tarot tarot) : void}interface Jokeable {  + equalHand(Hand hand) : bool}interface TarotApply {    + apply(score : Score) : void    + use() : void    + getName() : String    + getDescription() : String    + getTargetType() : Tarotable}interface Hand implements Taroteable {    + isValid(cards : List<Card>) : boolean    + getTotalPoints() : int    + incRelevantValues() : Score    + getRelevatCards() : List<Card>    + equalHand(hand : Hand) : boolean    + handToString() : String}class PlayingHand implements Jokeable, Taroteable{    - cards : List<Card>    - maxCards : int    + play() : Score    + addCard(card : Card) : void    + acceptMoreCards() : boolean    + removeCard(card : Card) : void    + applyTarot(TarotApply : Tarot) : void    + equalHand(hand : Hand) : boolean    + discard() : void    + checkHand(handString : String) : Hand    + getHandString() : String    + isHandNull() : boolean    + getHandSize() : int}class HandCheck {    - HandCheck()    + getHand(cards : List<Card>) : Hand    + getInstance() : HandCheck}PlayingHand "1" --> "1" HandPlayingHand "1" --> "1" HandCheckPlayingHand ..> TarotApplyHandCheck "1" --> "0..*" Hand@enduml